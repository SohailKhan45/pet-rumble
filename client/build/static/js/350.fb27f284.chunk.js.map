{"version":3,"file":"static/js/350.fb27f284.chunk.js","mappings":"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","sources":["pages/OTP.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/init/init.js","../node_modules/@emailjs/browser/es/methods/send/send.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-sparse-arrays */\nimport React, { useEffect, useState } from \"react\";\nimport Base from \"../components/Base\";\nimport \"../styles/resetPassword.css\";\nimport \"../styles/login.css\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport emailjs from \"@emailjs/browser\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Button from \"../components/Button\";\n\nconst OTP = () => {\n  const location = useLocation();\n  const email = location.state;\n  const [otp, setOTP] = useState();\n  const [userotp, setUserOTP] = useState([, , , , ,]);\n  const [counter, setCounter] = useState(60);\n\n  const navigate = useNavigate();\n\n  // Setting OTP at load time\n  useEffect(() => {\n    setOTP(Math.floor(100000 + Math.random() * 900000));\n  }, []);\n\n  // Sending otp when otp is changed\n  useEffect(() => {\n    if (!otp) return;\n    const templateParams = {\n      email: email,\n      otp: otp,\n    };\n    emailjs\n      .send(\n        process.env.REACT_APP_SERVICE_ID,\n        process.env.REACT_APP_TEMPLATE_ID_OTP,\n        templateParams,\n        process.env.REACT_APP_PUBLIC_API_KEY\n      )\n      .then(\n        (result) => {\n          toast.success(\"OTP Sent Successfully!\");\n        },\n        (error) => {\n          toast.error(\"Error sending the OTP, Please try again\");\n        }\n      );\n  }, [otp]);\n\n  // A 60s timer for expiry\n  useEffect(() => {\n    counter >= 0 && setTimeout(() => setCounter(counter - 1), 1000);\n    if (counter === -1) {\n      const exp = document.getElementsByClassName(\"OTPLinkExpiry\");\n      exp[0].style.visibility = \"hidden\";\n      setOTP(0);\n    }\n    if (counter === 0) {\n      const resendLink = document.getElementsByClassName(\"OTPResend\");\n      resendLink[0].addEventListener(\"click\", handleResend);\n      resendLink[0].style.cursor = \"pointer\";\n      resendLink[0].style.opacity = \"1\";\n      toast.warn(\"Click Resend code to get new OTP.\");\n    }\n  });\n\n  const handleResend = () => {\n    const exp = document.getElementsByClassName(\"OTPLinkExpiry\");\n    exp[0].style.visibility = \"visible\";\n    setCounter(60);\n    setOTP(Math.floor(100000 + Math.random() * 900000));\n    const resendLink = document.getElementsByClassName(\"OTPResend\");\n    resendLink[0].style.cursor = \"default\";\n    resendLink[0].removeEventListener(\"click\", handleResend);\n    resendLink[0].style.opacity = \"0.5\";\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!otp) {\n      toast.warn(\"OTP has expired. Click Resend code to get new OTP.\");\n      return;\n    }\n    let input = \"\";\n    userotp.map((num) => {\n      input = input + num;\n      return input;\n    });\n    if (otp === input) {\n      navigate(\"/verify/ChangePassword\", { state: email });\n    } else {\n      toast.error(\"Wrong OTP entered.\");\n    }\n  };\n\n  return (\n    <div className=\"resetPasswordWrapper\">\n      <Base />\n      <div className=\"OTP\">\n        <h1 className=\"OTPHeading\">Verify OTP</h1>\n        <p className=\"OTPText\">Please enter the OTP sent on your email</p>\n        <form onSubmit={(e) => handleSubmit(e)}>\n          <div className=\"OTPBox\">\n            <OTPContainer index={0} userotp={userotp} setUserOTP={setUserOTP} />\n            <OTPContainer index={1} userotp={userotp} setUserOTP={setUserOTP} />\n            <OTPContainer index={2} userotp={userotp} setUserOTP={setUserOTP} />\n            <OTPContainer index={3} userotp={userotp} setUserOTP={setUserOTP} />\n            <OTPContainer index={4} userotp={userotp} setUserOTP={setUserOTP} />\n            <OTPContainer index={5} userotp={userotp} setUserOTP={setUserOTP} />\n          </div>\n          <div className=\"OTPLink\">\n            <p className=\"OTPLinkExpiry\">\n              Expires in <span>{counter}</span>\n            </p>\n            <span className=\"OTPResend\" disabled>\n              Resend code\n            </span>\n          </div>\n          <div className=\"OTPBtn\">\n            <Button type=\"submit\" text=\"Verify\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default OTP;\n\nconst OTPContainer = ({ index, userotp, setUserOTP }) => {\n  const arr = userotp;\n\n  const handleChange = (e) => {\n    arr[index] = e.target.value;\n    setUserOTP(arr);\n    document.activeElement.nextElementSibling &&\n      document.activeElement.nextElementSibling.focus();\n  };\n  return (\n    <>\n      <input\n        onChange={handleChange}\n        placeholder=\"_\"\n        type=\"number\"\n        className=\"OTPContainer\"\n        maxLength={1}\n        onInput={(e) => {\n          if (e.target.value.length > e.target.maxLength)\n            e.target.value = e.target.value.slice(e.target.maxLength, 2);\n        }}\n      />\n    </>\n  );\n};\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} publicKey - set the EmailJS public key\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (publicKey, origin = 'https://api.emailjs.com') => {\n    store._userID = publicKey;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.12.1',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.12.1');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n"],"names":["OTP","email","useLocation","state","otp","setOTP","useState","userotp","setUserOTP","counter","setCounter","navigate","useNavigate","useEffect","Math","floor","random","templateParams","emailjs","process","REACT_APP_TEMPLATE_ID_OTP","then","result","toast","success","error","setTimeout","document","getElementsByClassName","style","visibility","resendLink","addEventListener","handleResend","cursor","opacity","warn","removeEventListener","_jsxs","className","children","_jsx","Base","onSubmit","e","preventDefault","input","map","num","handleSubmit","OTPContainer","index","disabled","Button","type","text","_ref","arr","_Fragment","onChange","target","value","activeElement","nextElementSibling","focus","placeholder","maxLength","onInput","length","slice","store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","responseText","sendPost","url","data","headers","arguments","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","querySelector","nodeName","findHTMLForm","formData","FormData","append"],"sourceRoot":""}