{"version":3,"file":"static/js/649.d5682ab5.chunk.js","mappings":"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","sources":["components/UserVaccination.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../styles/vaccination.css\";\nimport Logo from \"../assets/images/wigglesLogo.png\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { postData } from \"../utils/api\";\n\nconst Vaccination = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [petName, setPetName] = useState(\"\");\n  const [breed, setBreed] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [allergies, setAllergies] = useState(\"\");\n  const [conditions, setConditions] = useState(\"\");\n  const [vetName, setVetName] = useState(\"\");\n  const [vetNumber, setVetNumber] = useState(\"\");\n  const [vetAddress, setVetAddress] = useState(\"\");\n  const [vaccinations, setVaccinations] = useState([]);\n\n  useEffect(() => {\n    const handleContent = async () => {\n      try {\n        const response = await postData(\"userdata\", {\n          userID: id,\n        });\n        if (response.status !== 200) {\n          toast.error(\"Please refresh\");\n          return;\n        }\n        let data = response.data;\n\n        setPetName(data.foundUser.name);\n        setBreed(data.foundUser.breed);\n        setWeight(data.foundUser.weight);\n        setAllergies(data.foundUser.allergies);\n        setConditions(data.foundUser.conditions);\n        setVetName(data.foundUser.vetName);\n        setVetNumber(data.foundUser.vetNumber);\n        setVetAddress(data.foundUser.vetAddress);\n        setVaccinations(data.foundUser.vaccinations);\n      } catch (err) {\n        toast.error(\"User Not Found\");\n        navigate(\"/verify/login\");\n        return;\n      }\n    };\n    handleContent();\n  }, [id]);\n\n  return (\n    <>\n      <div className=\"vaccinationWrapper\">\n        <div className=\"headerContainer\">\n          <div className=\"logoInfoContainer\">\n            <img src={Logo} alt=\"website logo\" loading=\"lazy\"></img>\n            <h3>PetRumble</h3>\n          </div>\n          <h1>PET HEALTH RECORD</h1>\n        </div>\n        <div className=\"healthInfoWrapper\">\n          <div className=\"healthInfoContainer\">\n            <h1>\n              Pet's name: <span>{petName}</span>{\" \"}\n            </h1>\n            <div className=\"dogHealthInfo\">\n              <h1>\n                Breed: <span>{breed}</span>{\" \"}\n              </h1>\n              <div className=\"dogWeight\">\n                <h1>\n                  Weight: <span>{weight}</span>{\" \"}\n                </h1>\n                <h1>{weight > 0 ? \"kg\" : \"\"}</h1>\n              </div>\n              <h1>\n                Allergies: <span>{allergies}</span>{\" \"}\n              </h1>\n              <h1>\n                Conditions: <span>{conditions}</span>{\" \"}\n              </h1>\n            </div>\n          </div>\n          <div className=\"healthInfoContainer\">\n            <h1 className=\"vetNameInfo\">\n              Veterinarian:\n              {vetName && (\n                <>\n                  <h1 className=\"vetHonorific\">Dr.</h1> <span>{vetName}</span>\n                </>\n              )}\n            </h1>\n            <div className=\"vetInfo\">\n              <h1>\n                Phone no.: <span>{vetNumber}</span>{\" \"}\n              </h1>\n              <h1>\n                Address: <span>{vetAddress}</span>{\" \"}\n              </h1>\n            </div>\n          </div>\n          <div className=\"vaccinationContainer\">\n            <div className=\"vaccinationInfoPrimary\">\n              <h1>Vaccinations</h1>\n            </div>\n            <table className=\"vaccinationTable\">\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Batch Number</th>\n                  <th>Date</th>\n                  <th>Next visit</th>\n                </tr>\n              </thead>\n              <tbody>\n                {vaccinations?.length ? (\n                  vaccinations.map((vaccination) => (\n                    <tr key={vaccination?._id}>\n                      <td>{vaccination?.name}</td>\n                      <td>\n                        {vaccination?.batchNumber\n                          ? vaccination?.batchNumber\n                          : \"-\"}\n                      </td>\n                      <td>{vaccination?.date.slice(0, 10)}</td>\n                      <td>{vaccination?.dueDate.slice(0, 10)}</td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan={4}>No vaccination records added </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Vaccination;\n"],"names":["Vaccination","id","useParams","navigate","useNavigate","petName","setPetName","useState","breed","setBreed","weight","setWeight","allergies","setAllergies","conditions","setConditions","vetName","setVetName","vetNumber","setVetNumber","vetAddress","setVetAddress","vaccinations","setVaccinations","useEffect","async","response","postData","userID","status","toast","error","data","foundUser","name","err","handleContent","_jsx","_Fragment","children","_jsxs","className","src","Logo","alt","loading","length","map","vaccination","batchNumber","date","slice","dueDate","_id","colSpan"],"sourceRoot":""}