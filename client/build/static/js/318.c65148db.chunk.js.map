{"version":3,"file":"static/js/318.c65148db.chunk.js","mappings":"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","sources":["components/EditProfile.js","pages/Profile.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { IoCloseSharp } from \"react-icons/io5\";\nimport { AiOutlineEdit } from \"react-icons/ai\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { PiDogFill } from \"react-icons/pi\";\nimport { postData } from \"../utils/api\";\n\nexport default function EditProfile({\n  closeEditProfile,\n  name,\n  bio,\n  dob,\n  breed,\n  address,\n  gender,\n  editImage,\n  refresh,\n  setRefresh\n}) {\n  const [inputName, setInputName] = useState(name);\n  const [inputDob, setInputDob] = useState(dob);\n  const [inputBreed, setInputBreed] = useState(breed);\n  const [inputGender, setInputGender] = useState(gender);\n  const [inputBio, setInputBio] = useState(bio);\n  const [inputAddress, setInputAddress] = useState(address);\n\n  const [characterCount, setCharacterCount] = useState(0);\n  const [focus, setFocus] = useState(false);\n  const [image, setImage] = useState(editImage);\n  const currentDate = new Date().toISOString().split(\"T\")[0];\n  const breedOptions = [\n    { value: \"Labrador\", label: \"Labrador\" },\n    { value: \"Beagle\", label: \"Beagle\" },\n    { value: \"Pomeranian\", label: \"Pomeranian\" },\n    { value: \"Indian Pariah\", label: \"Indian Pariah\" },\n    { value: \"Golden Retriever\", label: \"Golden Retriever\" },\n    { value: \"Pug\", label: \"Pug\" },\n    { value: \"Indian Spitz\", label: \"Indian Spitz\" },\n    { value: \"Shih Tzu\", label: \"Shih Tzu\" },\n    { value: \"Siberian Husky\", label: \"Siberian Husky\" },\n    { value: \"Chihuahua\", label: \"Chihuahua\" },\n    { value: \"Cocker Spaniel\", label: \"Cocker Spaniel\" },\n    { value: \"Bull Dog\", label: \"Bull Dog\" },\n    { value: \"German Shepherd\", label: \"German Shepherd\" },\n    { value: \"Great Dane\", label: \"Great Dane\" },\n    { value: \"Rottweiler\", label: \"Rottweiler\" },\n    { value: \"Boxer\", label: \"Boxer\" },\n    { value: \"Dalmatian\", label: \"Dalmatian\" },\n    { value: \"Doberman\", label: \"Doberman\" },\n    { value: \"Pitbull\", label: \"Pitbull\" },\n    { value: \"Lhasa Apso\", label: \"Lhasa Apso\" },\n    { value: \"Pembroke Welsh Corgi\", label: \"Pembroke Welsh Corgi\" },\n    { value: \"Australian Shepherd\", label: \"Australian Shepherd\" },\n    { value: \"Yorkshire Terrier\", label: \"Yorkshire Terrier\" },\n  ];\n  const handleBreedChange = (selectedOption) => {\n    setInputBreed(selectedOption ? selectedOption.value : \"\");\n    setFocus(false);\n  };\n\n  const colorStyles = {\n    control: (styles) => ({\n      ...styles,\n      border: \"1px solid #a6a7acd4\",\n      color: \"black\",\n      boxShadow: \"none\",\n      \"&:hover\": {\n        border: \"1px solid #a6a7acd4\",\n      },\n    }),\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"name\", inputName);\n    formData.append(\"dob\", inputDob);\n    formData.append(\"gender\", inputGender);\n    formData.append(\"breed\", inputBreed);\n    formData.append(\"image\", image); // Append the image file to the FormData\n    formData.append(\"bio\", inputBio);\n    formData.append(\"address\", inputAddress);\n\n    try {\n      const response = await postData(\"updateProfile\", formData);\n      if (response.status === 200) {\n        setRefresh(!refresh);\n        closeEditProfile(false);\n        toast.success(\"Changes saved successfully\");\n      }\n    } catch (err) {\n      toast.error(\"There was an error. Kindly referesh the page.\");\n    }\n  };\n\n  const handleOnChange = (e) => {\n    setInputBio(e.target.value);\n    const textarea = document.querySelector(\"textarea\");\n    textarea.addEventListener(\"keydown\", (e) => {\n      textarea.style.height = \"auto\";\n      var scHeight = e.target.scrollHeight;\n      textarea.style.height = `${scHeight}px`;\n    });\n    setCharacterCount(e.target.value.length);\n  };\n\n  const handleImageChange = (event) => {\n    const file = event.target.files[0];\n    setImage(file);\n    event.target.value = \"\";\n    const reader = new FileReader();\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleCircularClick = () => {\n    // Trigger the file input when the circular container is clicked\n    document.getElementById(\"inputImage\").click();\n  };                              \n\n  function isValidUrl(string) {\n    try {\n      new URL(string);\n      return true; \n    } catch (err) {\n      return false;\n    }\n  }\n\n  return (\n    <div className=\"editProfileWrapper\">\n      <form className=\"editProfileContainer\" onSubmit={handleSubmit}>\n        <div className=\"editProfileHeader\">\n          <h4 className=\"header\">EDIT PROFILE</h4>\n          <button className=\"closeBtn\" onClick={() => closeEditProfile(false)}>\n            <IoCloseSharp />\n          </button>\n        </div>\n        <div className=\"editProfileForm\">\n          <div className=\"editProfilePrimary\">\n            <input\n              id=\"inputImage\"\n              type=\"file\"\n              accept=\"image/*\"\n              name=\"image\"\n              onChange={(e) => handleImageChange(e)}\n            />\n            <AiOutlineEdit\n              onClick={handleCircularClick}\n              className=\"editImageIcon\"\n            />\n            <div className=\"circularContainer\" onClick={handleCircularClick}>\n              {image ? (\n                <img\n                  className=\" editProfilePhoto profilePicture\"\n                  src={isValidUrl(image) ? image : URL.createObjectURL(image)}\n                  alt=\"Selected\"\n                />\n              ) : (\n                <PiDogFill className=\"editProfilePhoto profileIcon\" />\n              )}\n            </div>\n            <div\n              className=\"removeProfilePhoto\"\n              onClick={() => {\n                setImage(null);\n              }}\n            >\n              Remove Photo\n            </div>\n          </div>\n          <div className=\"editProfileSecondary\">\n            <div className=\"inputSection\">\n              <label id=\"name\">\n                Pet's Name\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={inputName}\n                  onChange={(event) => {\n                    setInputName(event.target.value);\n                  }}\n                  required\n                />\n              </label>\n              <label id=\"breed\">\n                Breed\n                <CreatableSelect\n                  className=\"breedDropdown\"\n                  options={breedOptions}\n                  placeholder={focus ? \"\" : inputBreed}\n                  value={inputBreed}\n                  onChange={handleBreedChange}\n                  styles={colorStyles}\n                  onFocus={() => {\n                    setFocus(true);\n                  }}\n                  onBlur={() => {\n                    setFocus(false);\n                  }}\n                  isSearchable\n                  isClearable\n                />\n              </label>\n            </div>\n            <label id=\"bio\" className=\"inputSection\">\n              Bio\n              <textarea\n                type=\"text\"\n                name=\"bio\"\n                rows={2}\n                value={inputBio}\n                maxLength={100}\n                onChange={handleOnChange}\n                required\n              />\n              <span className=\"textareaCount\">{characterCount}/100</span>\n            </label>\n            <div className=\"inputSection\">\n              <label id=\"dob\">\n                DOB\n                <input\n                  type=\"date\"\n                  value={inputDob}\n                  onFocus={(e) => (e.target.type = \"date\")}\n                  onChange={(event) => {\n                    setInputDob(event.target.value);\n                  }}\n                  max={currentDate}\n                  required\n                />\n              </label>\n              <label id=\"gender\">\n                Gender\n                <select\n                  name=\"gender\"\n                  onChange={(event) => {\n                    setInputGender(event.target.value);\n                  }}\n                  value={inputGender}\n                >\n                  <option value=\"Male\">Male</option>\n                  <option value=\"Female\">Female</option>\n                </select>\n              </label>\n            </div>\n            <label id=\"address\" className=\"inputSection\">\n              Address\n              <input\n                type=\"text\"\n                name=\"address\"\n                value={inputAddress}\n                onChange={(event) => {\n                  setInputAddress(event.target.value);\n                }}\n              />\n            </label>\n          </div>\n        </div>\n\n        <button type=\"submit\" className=\"btn editBtn\">\n          Save Changes\n        </button>\n      </form>\n    </div>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React, { useEffect, useState } from \"react\";\nimport { AiOutlineSetting } from \"react-icons/ai\";\nimport \"../styles/login.css\";\nimport \"../styles/profile.css\";\nimport EditProfile from \"../components/EditProfile\";\nimport { PiDogFill } from \"react-icons/pi\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { postData } from \"../utils/api\";\nimport { calculateAge } from \"../utils/common\";\n\nconst Profile = () => {\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [breed, setBreed] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [openEditProfile, setOpenEditProfile] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await postData(\"userdata\");\n        let data = response.data;\n        if (response.status === 401) {\n          toast.error(\"Kindly login first!\");\n          navigate(\"/verify/login\");\n          return;\n        }\n        if (data.status === \"ok\") {\n          setName(data.foundUser.name);\n          setBreed(data.foundUser.breed);\n          setGender(data.foundUser.gender);\n          if (data.foundUser.image === \"null\") {\n            setImage(null);\n          } else {\n            setImage(data.foundUser.image);\n          }\n          setBio(data.foundUser.bio);\n          setAddress(data.foundUser.address);\n          const { ageInYears, ageInMonths, ageInDays } = calculateAge(\n            data.foundUser.dob\n          );\n          setDob(data.foundUser.dob.slice(0, 10));\n          if (ageInYears >= 1) {\n            setAge(ageInYears + \" years\");\n          } else if (ageInMonths >= 1) {\n            setAge(ageInMonths + \" months\");\n          } else {\n            setAge(ageInDays + \" days\");\n          }\n        }\n      } catch (err) {\n        toast.warn(err);\n      }\n    };\n    fetchData();\n  }, [refresh]);\n\n  return (\n    <>\n      <div className=\"profile\">\n        <div className=\"userProfilePicture\">\n          {image ? (\n            <img\n              className=\"profilePicture\"\n              src={image}\n              alt=\"Profile\"\n              loading=\"lazy\"\n            />\n          ) : (\n            <PiDogFill className=\"profileIcon\" />\n          )}\n        </div>\n        <div className=\"profileInfoPrimary\">\n          <h1>Name : {name}</h1>\n          <h1>Bio : {bio}</h1>\n          <h1>Breed : {breed}</h1>\n          <h1>Gender : {gender}</h1>\n          <h1>Age : {age}</h1>\n          <h1>Address : {address} </h1>\n\n          <h1\n            className=\"profileInfoEdit\"\n            onClick={() => {\n              setOpenEditProfile(true);\n              document.querySelector(\".profile\").style.blur = \"30px\";\n            }}\n          >\n            <AiOutlineSetting /> &nbsp;Edit Profile\n          </h1>\n        </div>\n      </div>\n      {openEditProfile && (\n        <EditProfile\n          closeEditProfile={setOpenEditProfile}\n          name={name}\n          bio={bio}\n          breed={breed}\n          dob={dob}\n          gender={gender}\n          address={address}\n          editImage={image}\n          refresh={refresh}\n          setRefresh={setRefresh}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Profile;\n"],"names":["EditProfile","_ref","closeEditProfile","name","bio","dob","breed","address","gender","editImage","refresh","setRefresh","inputName","setInputName","useState","inputDob","setInputDob","inputBreed","setInputBreed","inputGender","setInputGender","inputBio","setInputBio","inputAddress","setInputAddress","characterCount","setCharacterCount","focus","setFocus","image","setImage","currentDate","Date","toISOString","split","handleCircularClick","document","getElementById","click","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","formData","FormData","append","postData","status","toast","success","err","error","onClick","IoCloseSharp","id","type","accept","onChange","event","file","target","files","value","reader","FileReader","readAsDataURL","handleImageChange","AiOutlineEdit","src","string","URL","isValidUrl","createObjectURL","alt","PiDogFill","required","CreatableSelect","options","label","placeholder","selectedOption","styles","control","border","color","boxShadow","onFocus","onBlur","isSearchable","isClearable","rows","maxLength","textarea","querySelector","addEventListener","style","height","scHeight","scrollHeight","concat","length","max","Profile","setName","age","setAge","setDob","setBreed","setGender","setBio","setAddress","openEditProfile","setOpenEditProfile","navigate","useNavigate","useEffect","response","data","foundUser","ageInYears","ageInMonths","ageInDays","calculateAge","slice","warn","fetchData","_Fragment","loading","blur","AiOutlineSetting"],"sourceRoot":""}