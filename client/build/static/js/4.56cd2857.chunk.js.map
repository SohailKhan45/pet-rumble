{"version":3,"file":"static/js/4.56cd2857.chunk.js","mappings":"oMAOe,SAASA,EAAkBC,GAStC,IATuC,GACzCC,EAAE,KACFC,EAAI,MACJC,EAAK,OACLC,EAAM,IACNC,EAAG,MACHC,EAAK,OACLC,EAAM,QACNC,GACDR,EACC,MAAMS,GAAWC,EAAAA,EAAAA,OACVC,EAAQC,IAAaC,EAAAA,EAAAA,UAASN,GA8BrC,OACEO,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAcC,QA9BZC,IACnBX,EAAS,YAAcR,EAAG,EA6B0Be,SAAA,EAChDF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,qCAAoCF,SAChDV,GACCQ,EAAAA,EAAAA,KAAA,OACEI,UAAU,4BACVG,IAAKf,EACLgB,IAAI,UACJd,QAAQ,UAGVM,EAAAA,EAAAA,KAACS,EAAAA,IAAS,CAACL,UAAU,kCAGzBD,EAAAA,EAAAA,MAAA,OAAKhB,GAAG,cAAae,SAAA,EACnBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaF,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,QAAMhB,GAAG,SAAQe,SAAA,CAAEZ,EAAO,UAC1BU,EAAAA,EAAAA,KAAA,QAAMb,GAAG,OAAMe,SAAEd,QAEnBe,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeF,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKb,GAAG,QAAOe,SAAEb,KACjBW,EAAAA,EAAAA,KAAA,OAAKb,GAAG,MAAMiB,UAAU,UAASF,SAC9BX,IAAOS,EAAAA,EAAAA,KAAA,KAAAE,SAAG,sCAGfF,EAAAA,EAAAA,KAAA,UAAQb,GAAG,WAAWkB,QAlDRK,UAEpB,GADAC,EAAMC,kBACS,eAAXf,EAAJ,CAIAC,EAAU,cACV,IAIE,IAAIe,SAHmBC,EAAAA,EAAAA,GAAS,YAAa,CAC3C3B,QAEkB0B,KACA,OAAhBA,EAAKpB,OACPsB,EAAAA,GAAMC,QAAQ,8BAEdD,EAAAA,GAAME,KAAKJ,EAAKpB,OAEpB,CAAE,MAAOyB,GAGP,OAFAC,QAAQC,IAAIF,QACZH,EAAAA,GAAMM,MAAM,4DAEd,CAhBA,MAFEN,EAAAA,GAAME,KAAK,wBAkBb,EA6BmDf,SAC1CL,WAMb,C,cCtEe,SAASyB,IACtB,MAAM3B,GAAWC,EAAAA,EAAAA,OACV2B,EAAOC,IAAYzB,EAAAA,EAAAA,UAAS,KAC5B0B,EAAQC,IAAa3B,EAAAA,EAAAA,UAAS,KAC9BL,EAASiC,IAAc5B,EAAAA,EAAAA,WAAS,IAEvC6B,EAAAA,EAAAA,YAAU,KACelB,WAErB,IAAIG,SADmBgB,EAAAA,EAAAA,GAAQ,SACXhB,KACpB,GAAoB,OAAhBA,EAAKpB,OAYP,OAFAsB,EAAAA,GAAMM,MAAM,4BACZ1B,EAAS,iBAVT+B,EAAUb,EAAKY,QACfD,EACEX,EAAKiB,MAAMC,QACRC,GACCA,EAAKC,MAAQpB,EAAKY,SAAWO,EAAKE,QAAQC,SAAStB,EAAKY,WAG9DE,GAAW,EAKb,EAEFS,EAAgB,GACf,IAEH,MAAMC,EAAgBC,MAAMC,KAAK,CAAEC,OAAQ,IAAKC,KAAI,KAClDzC,EAAAA,EAAAA,KAAC0C,EAAAA,GAAmB,MAGtB,OACE1C,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OAAKb,GAAG,uBAAsBe,SAC7BR,EACK2C,EACAd,EAAMiB,OAAS,EACfjB,EAAMkB,KAAKT,IACThC,EAAAA,EAAAA,KAACf,EAAkB,CAEjBE,GAAI6C,EAAKC,IACT7C,KAAM4C,EAAK5C,KACXC,MAAO2C,EAAK3C,MACZC,OAAQ0C,EAAK1C,OACbC,IAAKyC,EAAKzC,IACVC,MAAOwC,EAAKxC,MACZC,OACEuC,EAAKW,gBAAgBR,SAASV,GAC1B,aACA,aAVDO,EAAKC,QAeZ9B,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAM,6BAOtB,C","sources":["components/ExploreProfileCard.js","pages/Explore.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { PiDogFill } from \"react-icons/pi\";\nimport { postData } from \"../utils/api\";\n\nexport default function ExploreProfileCard({\n  id,\n  name,\n  breed,\n  gender,\n  bio,\n  image,\n  status,\n  loading,\n}) {\n  const navigate = useNavigate();\n  const [button, setButton] = useState(status);\n\n  const handleClick = (e) => {\n    navigate(\"/Profile/\" + id);\n  };\n\n  const handleConnect = async (event) => {\n    event.stopPropagation();\n    if (button === \"Pending...\") {\n      toast.warn(\"Request already sent!\");\n      return;\n    }\n    setButton(\"Pending...\");\n    try {\n      const response = await postData(\"addFriend\", {\n        id,\n      });\n      let data = response.data;\n      if (data.status === \"ok\") {\n        toast.success(\"Request successfully sent.\");\n      } else {\n        toast.warn(data.status);\n      }\n    } catch (err) {\n      console.log(err);\n      toast.error(\"There was an error. Please try again or refresh the page.\");\n      return;\n    }\n  };\n\n  return (\n    <>\n      <div className=\"profileCard\" onClick={handleClick}>\n        <div className=\"exploreCardProfilePictureContainer\">\n          {image ? (\n            <img\n              className=\"exploreCardProfilePicture\"\n              src={image}\n              alt=\"Profile\"\n              loading=\"lazy\"\n            />\n          ) : (\n            <PiDogFill className=\"exploreCardProfileDogIcon \" />\n          )}\n        </div>\n        <div id=\"profileInfo\">\n          <div className=\"primaryInfo\">\n            <span id=\"gender\">{gender} | </span>\n            <span id=\"name\">{name}</span>\n          </div>\n          <div className=\"secondaryInfo\">\n            <div id=\"breed\">{breed}</div>\n            <div id=\"bio\" className=\"bioText\">\n              {bio || <p>Here we will show your bio.</p>}\n            </div>\n          </div>\n          <button id=\"playdate\" onClick={handleConnect}>\n            {button}\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ExploreProfileCard from \"../components/ExploreProfileCard\";\nimport \"../styles/explore.css\";\nimport { toast } from \"react-toastify\";\nimport { ExploreCardSkeleton } from \"../utils/skeleton\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { getData } from \"../utils/api\";\n\nexport default function Explore() {\n  const navigate = useNavigate();\n  const [users, setUsers] = useState([]);\n  const [userID, setUserID] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const handleResponse = async () => {\n      const response = await getData(\"data\");\n      let data = response.data;\n      if (data.status === \"ok\") {\n        setUserID(data.userID);\n        setUsers(\n          data.Users.filter(\n            (user) =>\n              user._id !== data.userID && !user.friends.includes(data.userID)\n          )\n        );\n        setLoading(false);\n      } else {\n        toast.error(\"Unauthorised access\");\n        navigate(\"/verify/login\");\n        return;\n      }\n    };\n    handleResponse();\n  }, []);\n\n  const skeletonCards = Array.from({ length: 9 }).map(() => (\n    <ExploreCardSkeleton />\n  ));\n\n  return (\n    <>\n      <div id=\"profileCardContainer\">\n      {loading\n          ? skeletonCards\n          : users.length > 0\n          ? users.map((user) => (\n              <ExploreProfileCard\n                key={user._id}\n                id={user._id}\n                name={user.name}\n                breed={user.breed}\n                gender={user.gender}\n                bio={user.bio}\n                image={user.image}\n                status={\n                  user.requestRecieved.includes(userID)\n                    ? \"Pending...\"\n                    : \"Connect +\"\n                }\n              />\n            ))\n          : (\n              <h3>\n                <br />\n                Oops! No one's here.\n              </h3>\n            )}\n      </div>\n    </>\n  );\n}\n"],"names":["ExploreProfileCard","_ref","id","name","breed","gender","bio","image","status","loading","navigate","useNavigate","button","setButton","useState","_jsx","_Fragment","children","_jsxs","className","onClick","e","src","alt","PiDogFill","async","event","stopPropagation","data","postData","toast","success","warn","err","console","log","error","Explore","users","setUsers","userID","setUserID","setLoading","useEffect","getData","Users","filter","user","_id","friends","includes","handleResponse","skeletonCards","Array","from","length","map","ExploreCardSkeleton","requestRecieved"],"sourceRoot":""}