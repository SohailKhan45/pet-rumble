{"version":3,"file":"static/js/658.4502b293.chunk.js","mappings":"0NAWA,MAuDA,EAvDyBA,KACvB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,GAmBvC,OAjBAK,EAAAA,EAAAA,YAAU,KACiBC,WACvB,MAAMC,QAAiBC,EAAAA,EAAAA,GAAQ,iBAC/B,IAAIC,QAAaF,EAASE,KAC1B,GAAwB,MAApBF,EAASG,OAGX,OAFAC,EAAAA,GAAMC,MAAM,4BACZhB,EAAS,iBAGTa,QAAaA,EAAKX,cAClBC,EAAiBU,GACjBL,GAAW,EACb,EAEFS,EAAkB,GACjB,CAACZ,KAGFa,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,SACtCb,EACCe,MAAMC,KAAK,CAAEC,OAAQ,IAAKC,KAAI,KAAMJ,EAAAA,EAAAA,KAACK,EAAAA,GAAoB,MAC1C,OAAbxB,QAAa,IAAbA,GAAAA,EAAesB,OACjBtB,EAAcuB,KAAI,CAACE,EAAcC,KAC/BP,EAAAA,EAAAA,KAACQ,EAAAA,EAAgB,CAEfC,GAAIH,EAAaI,IACjBC,SAAUL,EAAaK,SACvBC,MAAON,EAAaM,MACpBC,QAASP,EAAaO,QACtBC,MAAOR,EAAaQ,MACpBC,sBAAuB,EACvB9B,WAAYA,EACZD,QAASA,GARJsB,EAAaI,QAYtBb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKgB,IAAKC,EAAgBC,IAAI,8BAC9BlB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wCACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4DAIL,C","sources":["pages/AllNotifications.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport NotificationCard from \"../components/NotificationCard\";\nimport \"../styles/notification.css\";\nimport { toast } from \"react-toastify\";\nimport { NotificationSkeleton } from \"../utils/skeleton\";\nimport noNotification from \"../assets/images/recentNotification.png\";\nimport { getData } from \"../utils/api\";\n\nconst AllNotifications = () => {\n  const navigate = useNavigate();\n  const [notifications, setNotifications] = useState(\"\");\n  const [refresh, setRefresh] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getnotifications = async () => {\n      const response = await getData(\"notifications\");\n      let data = await response.data;\n      if (response.status === 401) {\n        toast.error(\"Kindly login first!\");\n        navigate(\"/verify/login\");\n        return;\n      } else {\n        data = await data.notifications;\n        setNotifications(data);\n        setLoading(false);\n      }\n    };\n    getnotifications();\n  }, [refresh]);\n\n  return (\n    <div className=\"allNotificationWrapper\">\n      <h1>Notifications</h1>\n      <div className=\"allNotificationContainer\">\n        {loading ? (\n          Array.from({ length: 7 }).map(() => <NotificationSkeleton />)\n        ) : notifications?.length ? (\n          notifications.map((notification, idx) => (\n            <NotificationCard\n              key={notification._id}\n              id={notification._id}\n              friendID={notification.friendID}\n              title={notification.title}\n              message={notification.message}\n              image={notification.image}\n              allnotificationactive={1}\n              setRefresh={setRefresh}\n              refresh={refresh}\n            />\n          ))\n        ) : (\n          <div className=\"noNewNotification\">\n            <img src={noNotification} alt=\"No new notification icon\"/>\n            <h3>You have no new notifications yet.</h3>\n            <p>When you get notifications, they'll show up here</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AllNotifications;\n"],"names":["AllNotifications","navigate","useNavigate","notifications","setNotifications","useState","refresh","setRefresh","loading","setLoading","useEffect","async","response","getData","data","status","toast","error","getnotifications","_jsxs","className","children","_jsx","Array","from","length","map","NotificationSkeleton","notification","idx","NotificationCard","id","_id","friendID","title","message","image","allnotificationactive","src","noNotification","alt"],"sourceRoot":""}