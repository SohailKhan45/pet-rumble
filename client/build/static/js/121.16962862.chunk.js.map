{"version":3,"file":"static/js/121.16962862.chunk.js","mappings":"8OAMA,MAgCA,EAhCYA,IAAa,IAAZ,OAACC,GAAOD,EACjB,MACME,EADQC,SAASC,SAASC,KACTC,MAAM,KACvBC,EAAI,GAADC,OAAIN,EAAO,GAAE,MAAAM,OAAKN,EAAO,GAAE,uBAAAM,OAAsBP,IACnDQ,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,GAWjC,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASC,MAAM,OAAOC,QAXtBC,KACjBT,GAAQ,GACRU,UAAUC,UAAUC,UAAUf,GAC9BgB,YAAW,KACPb,GAAQ,EAAM,GACf,IAAK,EAMuDI,UACvDC,EAAAA,EAAAA,KAAA,OAAAD,SACML,GAAOM,EAAAA,EAAAA,KAACS,EAAAA,IAAM,CAACX,UAAU,8BAA+BE,EAAAA,EAAAA,KAACU,EAAAA,IAAa,SAGhFV,EAAAA,EAAAA,KAAA,KAAGW,OAAO,SAASC,IAAI,aAAatB,KAAI,sCAAAG,OAAwC,kDAAiD,IAAID,GAAMO,UACvIC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACa,EAAAA,IAAU,UAIjB,E,wBCrBC,SAASC,IACtB,MAAMC,GAAWC,EAAAA,EAAAA,OACV9B,EAAQ+B,IAAarB,EAAAA,EAAAA,UAAS,KAC9BsB,EAAMC,IAAWvB,EAAAA,EAAAA,UAAS,KAC1BwB,EAAeC,IAAoBzB,EAAAA,EAAAA,UAAS,KAC5C0B,EAAiBC,IAAsB3B,EAAAA,EAAAA,UAAS,KAChD4B,EAASC,IAAc7B,EAAAA,EAAAA,UAAS,wCAChC8B,EAAaC,IAAkB/B,EAAAA,EAAAA,WAAS,IACxCgC,EAASC,IAAcjC,EAAAA,EAAAA,WAAS,GAEjCT,EADUC,SAASC,SAASC,KACXC,MAAM,KACvBC,EAAG,GAAAC,OAAMN,EAAO,GAAE,MAAAM,OAAKN,EAAO,GAAE,uBAAAM,OAAsBP,IAsB5D4C,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,GAAQ,eAC/B,GAAwB,MAApBD,EAASE,OAGX,OAFAC,EAAAA,GAAMC,MAAM,4BACZrB,EAAS,iBAGX,IAAIsB,EAAOL,EAASK,KACA,OAAhBA,EAAKH,QACPf,EAAQkB,EAAKC,UAAUpB,MACvBD,EAAUoB,EAAKC,UAAUC,MAEzBJ,EAAAA,GAAMC,MAAM,iBAEhB,CAAE,MAAOI,GACPC,QAAQC,IAAIF,EACd,GAgBFG,GAdmBZ,WACjB,IAEE,IAAIM,SADmBO,EAAAA,EAAAA,GAAS,WACZP,KACA,OAAhBA,EAAKH,SACPb,EAAiBgB,EAAKC,UAAUlB,eAChCG,EAAmBc,EAAKC,UAAUhB,iBAClCG,EAAWY,EAAKC,UAAUd,SAC1BG,EAAeU,EAAKC,UAAUZ,aAElC,CAAE,MAAOc,GACPC,QAAQC,IAAIF,EACd,GAGFK,EAAY,GACX,IAkDH,OACEhD,EAAAA,EAAAA,MAAAiD,EAAAA,SAAA,CAAA/C,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cACfD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,mBAAkBC,SAAA,EAChCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,UACtBC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAW,CACVC,QAAStB,EACTuB,SAAUA,KACRtB,GAAgBD,GAtHbK,WACnB,IACE,MAAMC,QAAiBY,EAAAA,EAAAA,GAAS,WAAY,CAC1ClB,aAAcA,IAGhBG,GAAYD,GACY,MAApBI,EAASE,QAAmBR,EAEH,MAApBM,EAASE,QAAkBR,EAClCS,EAAAA,GAAMe,QAAQ,yBAEdf,EAAAA,GAAMC,MACJ,+DALFD,EAAAA,GAAMe,QAAQ,sBAOlB,CAAE,MAAOV,GACPC,QAAQC,IAAIF,EACd,GAsGgBW,EAAc,EAEhBC,QAAQ,UACRC,cAAc,UACdC,eAAgB,GAChBC,eAAe,EACfC,aAAa,EACbC,UAAU,iCACVC,gBAAgB,sCAChBC,OAAQ,GACRC,MAAO,GACP9D,UAAU,cACV+D,GAAG,0BAIThE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,SAAO6D,GAAG,YAAW9D,UACnBC,EAAAA,EAAAA,KAAA,SACEF,UAAU,aACVG,KAAK,OACLiB,KAAK,aACL4C,MAAO1C,EACP2C,YAAY,iBACZd,SAAWe,IACT3C,EAAiB2C,EAAMrD,OAAOmD,MAAM,EAEtCG,UAAQ,OAGZjE,EAAAA,EAAAA,KAAA,SAAO6D,GAAG,qBAAoB9D,UAC5BC,EAAAA,EAAAA,KAAA,SACEF,UAAU,aACVG,KAAK,OACLiB,KAAK,aACL4C,MAAOxC,EACPyC,YAAY,2BACZd,SAAWe,IACTzC,EAAmByC,EAAMrD,OAAOmD,MAAM,EAExCG,UAAQ,OAGZjE,EAAAA,EAAAA,KAAA,SAAO6D,GAAG,UAAS9D,UACjBC,EAAAA,EAAAA,KAAA,YACEF,UAAU,aACV+D,GAAG,WACH5D,KAAK,OACLiB,KAAK,UACL4C,MAAOtC,EACP0C,KAAM,EACNH,YAAY,yBACZd,SAAWe,IACTvC,EAAWuC,EAAMrD,OAAOmD,MAAM,EAEhCG,UAAQ,OAGZjE,EAAAA,EAAAA,KAAA,UACEF,UAAU,gBACVG,KAAK,SACLE,QA1HO4B,UAEnB,GADAiC,EAAMG,iBACD/C,EAAcgD,MAAM,YAIzB,GAAK9C,EAAgB8C,MAAM,YAI3B,UACQxB,EAAAA,EAAAA,GAAS,UAAW,CACxBxB,gBACAE,kBACAE,YAEFW,EAAAA,GAAMe,QAAQ,yBACdrB,GAAYD,EACd,CAAE,MAAOY,GACPL,EAAAA,GAAMC,MACJ,8DAEJ,MAfED,EAAAA,GAAMC,MAAM,8DAJZD,EAAAA,GAAMC,MAAM,8CAmBd,EAoGkCrC,SACvB,kBAKLF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,KAACqE,EAAAA,EAAO,CAACzC,QAASA,KAClB/B,EAAAA,EAAAA,MAAA,QAAMC,UAAU,mBAAkBC,SAAA,EAChCC,EAAAA,EAAAA,KAACsE,EAAAA,GAAW,CACVxE,UAAU,uBACVK,QA9FMoE,KAClB,MAAMC,EAASpF,SAASqF,KAAKC,uBAC3B,0BAEIC,EAAOvF,SAASqF,KAAKC,uBAAuB,wBAClDF,EAAO,GAAGI,UAAUC,OAAO,sBAC3BF,EAAK,GAAGC,UAAUC,OAAO,6BAA6B,KA0F5C7E,EAAAA,EAAAA,KAAC8E,EAAK,CAAC5F,OAAQA,iBAMvBW,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,UAASC,SAAC,qBACxBF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,cAAaC,SAAA,CAAC,iFAElBC,EAAAA,EAAAA,KAAA,SAAM,mGAKlBH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,UAASC,SAAC,oBACxBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,YAAWC,SAAC,uBACzBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAUC,SAAC,4IAIxBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,YAAWC,SAAC,yBACzBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAUC,SAAC,gIAIxBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,YAAWC,SAAC,wBACzBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAUC,SAAC,oJAKxBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,YAAWC,SAAC,oBACzBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAUC,SAAC,uKAKxBF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,YAAWC,SAAA,CAAC,4BACCC,EAAAA,EAAAA,KAAC+E,EAAAA,IAAkB,CAACjF,UAAU,gBAExDE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAUC,SAAC,oOAO1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQC,SAAA,EACrBC,EAAAA,EAAAA,KAACgF,EAAAA,GAAY,CACXnB,GAAG,WACHoB,KAAM,IACNnB,MAAOtE,EACP0F,QAAO,cACPpF,UAAU,WAEZE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAQK,QAxKRgF,KACrB,MAAMC,EAAYhG,SACfiG,eAAe,YACfC,UAAU,aACVC,QAAQ,YAAa,sBACxB,IAAIC,EAAMpG,SAASqG,cAAc,KACjCD,EAAIlG,KAAO8F,EACXI,EAAIE,SAAQ,GAAAjG,OAAMyB,EAAI,gBACtB9B,SAASqF,KAAKkB,YAAYH,GAC1BA,EAAII,QACJxG,SAASqF,KAAKoB,YAAYL,GAC1BrD,EAAAA,GAAMe,QAAQ,0BAA0B,EA6JanD,SAAC,wBAO1D,C","sources":["components/ShareProfileCard.js","pages/QRGenerator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/QRGenerator.css';\nimport { BsWhatsapp } from 'react-icons/bs';\nimport { MdContentCopy } from 'react-icons/md';\nimport { TiTick } from \"react-icons/ti\";\n\nconst Share=({userID})=>{\n    const website=document.location.href;\n    const domain = website.split(\"/\");\n    const url=`${domain[0]}//${domain[2]}/verify/generateqr/${userID}`;\n    const [copy, setCopy] = useState(false);\n\n    const handleCopyLink=()=>{\n        setCopy(true);\n        navigator.clipboard.writeText(url);\n        setTimeout(() => {\n            setCopy(false);\n        }, 1000);\n\n    }\n\n    return(\n        <div className='shareProfileCardPannel' >\n            <button type='button' title=\"Copy\" onClick={handleCopyLink}>\n                <div>\n                    { copy ? <TiTick className=\"shareProfileCardTickIcon\"/> : <MdContentCopy/> }\n                </div>\n            </button>\n            <a target=\"_blank\" rel=\"noreferrer\" href={`https://api.whatsapp.com/send?text=${\"Hey, Check out my dog's account on Pet Rumble: \"} ${url}`}>\n                <div> \n                    <BsWhatsapp/>\n                </div>\n            </a>\n            \n        </div>\n    )\n}\n\nexport default Share;","import React, { useEffect, useState } from \"react\";\nimport { QRCodeCanvas } from \"qrcode.react\";\nimport ReactSwitch from \"react-switch\";\nimport \"../styles/QRGenerator.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Message from \"../components/Message\";\nimport Share from \"../components/ShareProfileCard\";\nimport { BsShareFill } from \"react-icons/bs\";\nimport { RiAlarmWarningFill } from \"react-icons/ri\";\nimport { getData, postData } from \"../utils/api\";\n\nexport default function QRGenerator() {\n  const navigate = useNavigate();\n  const [userID, setUserID] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [contactNumber, setContactNumber] = useState(\"\");\n  const [alternateNumber, setAlternateNumber] = useState(\"\");\n  const [message, setMessage] = useState(\"Please contact if you found my pet!\");\n  const [switchState, setSwitchState] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const website = document.location.href;\n  const domain = website.split(\"/\");\n  const url = `${domain[0]}//${domain[2]}/verify/generateqr/${userID}`;\n\n  const handleSwitch = async () => {\n    try {\n      const response = await postData(\"qrSwitch\", {\n        switchState: !switchState,\n      });\n\n      setRefresh(!refresh);\n      if (response.status === 201 && !switchState)\n        toast.success(\"Lost Mode Activated\");\n      else if (response.status === 201 && switchState)\n        toast.success(\"Lost Mode Deactivated\");\n      else\n        toast.error(\n          \"Sorry! We Couldn't Update Lost Mode. Please Try Again Later\"\n        );\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await getData(\"profiledata\");\n        if (response.status === 401) {\n          toast.error(\"Kindly login first!\");\n          navigate(\"/verify/login\");\n          return;\n        }\n        let data = response.data;\n        if (data.status === \"ok\") {\n          setName(data.foundUser.name);\n          setUserID(data.foundUser._id);\n        } else {\n          toast.error(\"Please reload!\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    const fetchState = async () => {\n      try {\n        const response = await postData(\"qrData\");\n        let data = response.data;\n        if (data.status === \"ok\") {\n          setContactNumber(data.foundUser.contactNumber);\n          setAlternateNumber(data.foundUser.alternateNumber);\n          setMessage(data.foundUser.message);\n          setSwitchState(data.foundUser.switchState);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n    fetchState();\n  }, []);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (!contactNumber.match(/^\\d{10}$/)) {\n      toast.error(\"Please enter a valid 10-digit phone number.\");\n      return;\n    }\n    if (!alternateNumber.match(/^\\d{10}$/)) {\n      toast.error(\"Please enter a valid 10-digit alternate phone number.\");\n      return;\n    }\n    try {\n      await postData(\"qr-code\", {\n        contactNumber,\n        alternateNumber,\n        message,\n      });\n      toast.success(\"Successfully Updated.\");\n      setRefresh(!refresh);\n    } catch (err) {\n      toast.error(\n        \"There was an error. Kindly referesh the page and try again.\"\n      );\n    }\n  };\n\n  const downloadQRCode = () => {\n    const qrCodeURL = document\n      .getElementById(\"qrCodeEl\")\n      .toDataURL(\"image/png\")\n      .replace(\"image/png\", \"image/octet-stream\");\n    let aEl = document.createElement(\"a\");\n    aEl.href = qrCodeURL;\n    aEl.download = `${name}_Wiggles.png`;\n    document.body.appendChild(aEl);\n    aEl.click();\n    document.body.removeChild(aEl);\n    toast.success(\"Successfully Downloaded\");\n  };\n\n  const handleShare = () => {\n    const pannel = document.body.getElementsByClassName(\n      \"shareProfileCardPannel\"\n    );\n    const icon = document.body.getElementsByClassName(\"profileCardShareIcon\");\n    pannel[0].classList.toggle(\"sharePannelVisible\");\n    icon[0].classList.toggle(\"profileCardShareIconRotate\");\n  };\n\n  return (\n    <>\n      <div className=\"bgLostPet\">\n        <div className=\"bgHeader\"></div>\n        <div className=\"lostPetContainer\">\n          <form className=\"msgContainerLeft\">\n            <div className=\"messageTitle\">\n              <h2>Lost Pet?</h2>\n              <div className=\"lostPet\">\n                <ReactSwitch\n                  checked={switchState}\n                  onChange={() => {\n                    setSwitchState(!switchState);\n                    handleSwitch();\n                  }}\n                  onColor=\"#fed3a3\"\n                  onHandleColor=\"#ff8400\"\n                  handleDiameter={30}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n                  activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n                  height={20}\n                  width={48}\n                  className=\"reactSwitch\"\n                  id=\"material-switch\"\n                />\n              </div>\n            </div>\n            <div className=\"msgForm\">\n              <label id=\"contactno\">\n                <input\n                  className=\"inputField\"\n                  type=\"text\"\n                  name=\"contact no\"\n                  value={contactNumber}\n                  placeholder=\"Contact Number\"\n                  onChange={(event) => {\n                    setContactNumber(event.target.value);\n                  }}\n                  required\n                />\n              </label>\n              <label id=\"alternateContactno\">\n                <input\n                  className=\"inputField\"\n                  type=\"text\"\n                  name=\"contact no\"\n                  value={alternateNumber}\n                  placeholder=\"Alternate Contact Number\"\n                  onChange={(event) => {\n                    setAlternateNumber(event.target.value);\n                  }}\n                  required\n                />\n              </label>\n              <label id=\"message\">\n                <textarea\n                  className=\"inputField\"\n                  id=\"textarea\"\n                  type=\"text\"\n                  name=\"message\"\n                  value={message}\n                  rows={5}\n                  placeholder=\"Drop your message here\"\n                  onChange={(event) => {\n                    setMessage(event.target.value);\n                  }}\n                  required\n                />\n              </label>\n              <button\n                className=\"btn uploadMsg\"\n                type=\"submit\"\n                onClick={handleSubmit}\n              >\n                Submit\n              </button>\n            </div>\n          </form>\n          <div className=\"QRGeneratorProfileCard\">\n            <Message refresh={refresh} />\n            <span className=\"profileCardShare\">\n              <BsShareFill\n                className=\"profileCardShareIcon\"\n                onClick={handleShare}\n              />\n              <Share userID={userID} />\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"qrGuide\">\n        <h1 className=\"qrTitle\">What is Pet QR?</h1>\n        <h4 className=\"qrGuideText\">\n          Your pet's QR helps you to connect with others—share it or scan\n          theirs. <br />\n          Toggle the button for a help message, aiding in a quick reunion if\n          your pet is ever lost.\n        </h4>\n      </div>\n      <div className=\"qrCodeContainer\">\n        <div className=\"qrDescription\">\n          <h1 className=\"qrTitle\">How to use QR?</h1>\n          <p className=\"stepTitle\">Download QR Code:</p>\n          <p className=\"stepDesc\">\n            To get started, download the QR code from our website. It's like a\n            special picture that contains important information about your pet.\n          </p>\n          <p className=\"stepTitle\">Attach to Your Pet:</p>\n          <p className=\"stepDesc\">\n            Attach this QR code to your pet's collar, tag, or accessories.\n            Ensure it's visible, yet comfortable for your furry friend.\n          </p>\n          <p className=\"stepTitle\">Scan with a Phone:</p>\n          <p className=\"stepDesc\">\n            If your pet goes missing, someone can use their smartphone to scan\n            the QR code. It's easy - just open the camera app and point it at\n            the code.\n          </p>\n          <p className=\"stepTitle\">Pet's Profile:</p>\n          <p className=\"stepDesc\">\n            After scanning, your pet's profile card will magically appear on\n            their phone — a comprehensive ID card featuring their name, your\n            contact details, and more.\n          </p>\n          <p className=\"stepTitle\">\n            Helpful in Emergencies: <RiAlarmWarningFill className=\"redIcon\" />\n          </p>\n          <p className=\"stepDesc\">\n            In emergencies, set up a special message on our website. If your pet\n            is lost, press the button, and the message will appear on the\n            profile card. It acts as a digital tag for your furry friend, aiding\n            in a quick reunion.\n          </p>\n        </div>\n        <div className=\"qrCard\">\n          <QRCodeCanvas\n            id=\"qrCodeEl\"\n            size={256}\n            value={url}\n            viewBox={`0 0 256 256`}\n            className=\"qrImg\"\n          />\n          <div className=\"qrBtn\" onClick={downloadQRCode}>\n            Download QR\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":["_ref","userID","domain","document","location","href","split","url","concat","copy","setCopy","useState","_jsxs","className","children","_jsx","type","title","onClick","handleCopyLink","navigator","clipboard","writeText","setTimeout","TiTick","MdContentCopy","target","rel","BsWhatsapp","QRGenerator","navigate","useNavigate","setUserID","name","setName","contactNumber","setContactNumber","alternateNumber","setAlternateNumber","message","setMessage","switchState","setSwitchState","refresh","setRefresh","useEffect","async","response","getData","status","toast","error","data","foundUser","_id","err","console","log","fetchData","postData","fetchState","_Fragment","ReactSwitch","checked","onChange","success","handleSwitch","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","height","width","id","value","placeholder","event","required","rows","preventDefault","match","Message","BsShareFill","handleShare","pannel","body","getElementsByClassName","icon","classList","toggle","Share","RiAlarmWarningFill","QRCodeCanvas","size","viewBox","downloadQRCode","qrCodeURL","getElementById","toDataURL","replace","aEl","createElement","download","appendChild","click","removeChild"],"sourceRoot":""}