{"version":3,"file":"static/js/276.c9de9b5b.chunk.js","mappings":"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","sources":["components/ShareVaccinations.js","pages/Vaccination.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../styles/vaccination.css\";\nimport { BsSave, BsWhatsapp } from \"react-icons/bs\";\nimport { MdContentCopy } from \"react-icons/md\";\nimport html2canvas from \"html2canvas\";\nimport { jsPDF } from \"jspdf\";\n\nconst Share = ({ show, print, setPrint, userID }) => {\n  const [copyText, setCopyText] = useState(\"Copy link\");\n  const website = document.location.href;\n  const domain = website.split(\"/\");\n  const url = `${domain[0]}//${domain[2]}/verify/vaccination/${userID}`;\n\n  const handleCopyLink = () => {\n    navigator.clipboard.writeText(url);\n    setCopyText(\"Copied\");\n    setTimeout(() => {\n      setCopyText(\"Copy link\");\n    }, 2000);\n  };\n\n  const handleSave = async () => {\n    await setPrint(1);\n    const card = document.querySelector(\".vaccinationWrapper\");\n\n    html2canvas(card, { scale: \"3\" }).then((canvas) => {\n      const data = canvas.toDataURL(\"img/png\");\n      const doc = new jsPDF(\"p\", \"px\");\n      const docWidth = doc.internal.pageSize.getWidth();\n      const docHeight = doc.internal.pageSize.getHeight();\n      doc.addImage(data, \"PNG\", 0, 0, docWidth, docHeight);\n      doc.save(\"Pet Health Card.pdf\");\n    });\n    setPrint(0);\n  };\n\n  return (\n    <div\n      className={`sharePannel ${\n        show && !print ? \"displayVisible\" : \"displayHidden\"\n      }`}\n    >\n      <button type=\"button\" title=\"Copy\" onClick={handleCopyLink}>\n        <div>\n          <MdContentCopy /> &nbsp; {copyText}\n        </div>\n      </button>\n      <a\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        href={`https://api.whatsapp.com/send?text=${\"Hey, Check out my dog's vaccinations:\"} ${\n          document.location.href + \"/\" + userID\n        }`}\n      >\n        <div>\n          <BsWhatsapp /> &nbsp; Share\n        </div>\n      </a>\n      <button type=\"button\" onClick={handleSave}>\n        <div>\n          <BsSave /> &nbsp; Save as pdf\n        </div>\n      </button>\n    </div>\n  );\n};\n\nexport default Share;\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React, { useEffect, useState } from \"react\";\nimport { VaccinationTableSkeleton } from \"../utils/skeleton\";\nimport ShareVaccination from \"../components/ShareVaccinations\";\nimport \"../styles/vaccination.css\";\nimport Logo from \"../assets/images/wigglesLogo.png\";\nimport { BsShareFill } from \"react-icons/bs\";\nimport { toast } from \"react-toastify\";\nimport { AiOutlineEdit, AiOutlinePlus, AiOutlineSave } from \"react-icons/ai\";\nimport { useNavigate } from \"react-router-dom\";\nimport { VaccinationCardSkeleton } from \"../utils/skeleton\";\nimport { getData, postData } from \"../utils/api\";\n\nconst Vaccination = () => {\n  const navigate = useNavigate();\n  const [show, setShow] = useState(false);\n  const [print, setPrint] = useState(false);\n  const [userID, setUserID] = useState(\"\");\n  const [petName, setPetName] = useState(\"\");\n  const [breed, setBreed] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [allergies, setAllergies] = useState(\"\");\n  const [conditions, setConditions] = useState(\"\");\n  const [vetName, setVetName] = useState(\"\");\n  const [vetNumber, setVetNumber] = useState(\"\");\n  const [vetAddress, setVetAddress] = useState(\"\");\n  const [vaccinations, setVaccinations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [visit, setVisit] = useState({\n    name: \"\",\n    batchNumber: null,\n    date: null,\n    dueDate: null,\n  });\n  const [inactive, setInactive] = useState(true);\n  const [addVaccination, setAddVaccination] = useState(false);\n  const [editbtn, setEditbtn] = useState(\"Edit\");\n  const [editIcon, setEditIcon] = useState(false);\n  \n  document.addEventListener(\"click\", () => setAddVaccination(false));\n\n  useEffect(() => {\n    handleContent();\n  }, []);\n\n  const onFocus = (e) => {\n    e.currentTarget.type = \"date\";\n  };\n  const onBlur = (e) => {\n    e.currentTarget.type = \"text\";\n    e.currentTarget.placeholder = \"Date\";\n  };\n\n  const handleContent = async () => {\n    const response = await getData(\"profiledata\");\n    let data = response.data;\n    if (response.status === 401) {\n      toast.error(\"Kindly login first!\");\n      navigate(\"/verify/login\");\n      return;\n    }\n\n    if (data.status !== \"ok\") {\n      toast.error(\"Please refresh\");\n      return;\n    }\n\n    setLoading(false);\n    setUserID(data.foundUser._id);\n    setPetName(data.foundUser.name);\n    setBreed(data.foundUser.breed);\n    setWeight(data.foundUser.weight);\n    setAllergies(data.foundUser.allergies);\n    setConditions(data.foundUser.conditions);\n    setVetName(data.foundUser.vetName);\n    setVetNumber(data.foundUser.vetNumber);\n    setVetAddress(data.foundUser.vetAddress);\n    setVaccinations(data.foundUser.vaccinations);\n  };\n\n  const handleEdit = async (e) => {\n    e.preventDefault();\n    if (editbtn === \"Edit\") {\n      setInactive(false);\n      setEditbtn(\"Save\");\n      setEditIcon(!editIcon);\n      return;\n    }\n    if (\n      vetNumber &&\n      vetNumber.toString() !== \"\" &&\n      !vetNumber.toString().match(/^[0-9]{10}$/)\n    ) {\n      toast.error(\"Please enter a valid 10-digit phone number.\");\n      return;\n    }\n\n    if (weight <= 0) {\n      toast.error(\"Please enter a valid weight\");\n      return;\n    }\n\n    if (!/^[a-zA-Z]+$/.test(vetName) || vetName === \"\") {\n      toast.error(\"Please enter a valid veterinarian name\");\n      return;\n    }\n\n    const response = await postData(\"updateProfile\", {\n      petName,\n      breed,\n      weight,\n      allergies,\n      conditions,\n      vetName,\n      vetNumber,\n      vetAddress,\n    });\n\n    if (response.status !== 200) {\n      toast.error(\"Please refresh\");\n      return;\n    }\n\n    toast.success(\"Successfully updated!\");\n    setInactive(true);\n    setEditbtn(\"Edit\");\n    setEditIcon(!editIcon);\n  };\n\n  const getNextDay = (selectedDate) => {\n    const nextDay = new Date(selectedDate);\n    nextDay.setDate(nextDay.getDate() + 1);\n    return nextDay.toISOString().split(\"T\")[0];\n  };\n\n  const handleAddVaccine = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!addVaccination) {\n      setAddVaccination(!addVaccination);\n      return;\n    }\n\n    if (new Date(visit.dueDate) <= new Date(visit.date)) {\n      toast.error(\"Next visit date should be after the vaccination date.\");\n      return;\n    }\n\n    const response = await postData(\"updateVaccinations\", { visit });\n\n    if (response.status !== 200) {\n      toast.error(\"Please refresh\");\n      return;\n    }\n\n    toast.success(\"Successfully updated!\");\n    handleContent();\n    setAddVaccination(!addVaccination);\n    setVisit({\n      name: \"\",\n      batchNumber: null,\n      date: null,\n      dueDate: null,\n    });\n  };\n\n  return (\n    <div className=\"vaccinationWrapper\">\n      <div\n        className={`shareIconContainer ${\n          print ? \"vaccPrintHide\" : \"vaccPrintShow\"\n        }`}\n        onClick={() => (show ? setShow(false) : setShow(true))}\n      >\n        <BsShareFill />\n      </div>\n      <ShareVaccination\n        show={show}\n        print={print}\n        setPrint={setPrint}\n        userID={userID}\n      />\n      <div className=\"headerContainer\">\n        <div className=\"logoInfoContainer\">\n          <img src={Logo} alt=\"Website logo\" loading=\"lazy\"></img>\n          <h3>PetRumble</h3>\n        </div>\n        <h1>PET HEALTH RECORD</h1>\n      </div>\n      <div className=\"healthInfoWrapper\">\n        <button\n          id=\"vaccinationButton\"\n          className={`editButton ${print ? \"vaccPrintHide\" : \"vaccPrintShow\"}`}\n          onClick={handleEdit}\n        >\n          {\" \"}\n          {editIcon ? (\n            <AiOutlineEdit className=\"editIcon\" />\n          ) : (\n            <AiOutlineSave className=\"editIcon\" />\n          )}\n          &nbsp;{editbtn}\n        </button>\n        {loading ? (\n          <VaccinationCardSkeleton />\n        ) : (\n          <>\n            <div className=\"healthInfoContainer\">\n              <h1 id=\"vaccinationSubheading\">Pet's Details</h1>\n              <h1>\n                Name: <span>{petName}</span>\n              </h1>\n              <div className=\"dogHealthInfo\">\n                <h1>\n                  Breed: <span>{breed}</span>\n                </h1>\n                <div className=\"dogWeight\">\n                  <h1>\n                    Weight:\n                    <input\n                      id=\"weight\"\n                      disabled={inactive}\n                      type=\"number\"\n                      value={weight ?? \"\"}\n                      onChange={(e) => {\n                        setWeight(e.target.value);\n                      }}\n                    />\n                  </h1>\n                  <h1 className=\"dogWeightUnit\">{weight ? \"kg\" : \"\"}</h1>\n                </div>\n                <div>\n                  <h1>\n                    Allergies:\n                    <input\n                      disabled={inactive}\n                      className=\"inputAllergiesConditions\"\n                      type=\"text\"\n                      value={allergies ?? \"\"}\n                      onChange={(e) => {\n                        setAllergies(e.target.value);\n                      }}\n                    />\n                  </h1>\n                </div>\n                <div>\n                  <h1>\n                    Conditions:\n                    <input\n                      disabled={inactive}\n                      className=\"inputAllergiesConditions\"\n                      type=\"text\"\n                      value={conditions ?? \"\"}\n                      onChange={(e) => {\n                        setConditions(e.target.value);\n                      }}\n                    />\n                  </h1>\n                </div>\n              </div>\n            </div>\n            <div className=\"healthInfoContainer\">\n              <h1 id=\"vaccinationSubheading\">Veterinarian's Details</h1>\n              <h1 className=\"vetNameInfo\">\n                Name:\n                <h1 className=\"vetHonorific\">{vetName ? \"Dr.\" : \"\"}</h1>\n                <input\n                  disabled={inactive}\n                  type=\"text\"\n                  value={vetName ?? \"\"}\n                  onChange={(e) => {\n                    setVetName(e.target.value);\n                  }}\n                  className=\"vetName\"\n                />\n              </h1>\n              <div className=\"vetInfo\">\n                <h1>\n                  Contact Number:\n                  <input\n                    disabled={inactive}\n                    type=\"number\"\n                    value={vetNumber ?? \"\"}\n                    maxLength={10}\n                    onChange={(e) => {\n                      setVetNumber(e.target.value);\n                    }}\n                  />\n                </h1>\n                <h1>\n                  Location:\n                  <input\n                    disabled={inactive}\n                    type=\"text\"\n                    value={vetAddress ?? \"\"}\n                    onChange={(e) => {\n                      setVetAddress(e.target.value);\n                    }}\n                  />\n                </h1>\n              </div>\n            </div>\n          </>\n        )}\n        <div\n          className=\"vaccinationContainer\"\n          onClick={(e) => e.stopPropagation()}\n        >\n          <div className=\"vaccinationInfoPrimary\">\n            <h1 id=\"vaccinationSubheading\">Vaccinations</h1>\n            <button\n              id=\"vaccinationButton\"\n              form=\"vaccinationForm\"\n              className={`${print ? \"vaccPrintHide\" : \"vaccPrintShow\"}`}\n            >\n              {addVaccination ? (\n                <AiOutlineSave className=\"addIcon\" />\n              ) : (\n                <AiOutlinePlus className=\"addIcon\" />\n              )}\n              &nbsp;{addVaccination ? \"Save\" : \"Add\"}{\" \"}\n            </button>\n          </div>\n          <form\n            name=\"Vaccination Form\"\n            id=\"vaccinationForm\"\n            onSubmit={handleAddVaccine}\n          ></form>\n          <table className=\"vaccinationTable\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Batch Number</th>\n                <th>Date</th>\n                <th>Next visit</th>\n              </tr>\n            </thead>\n            <tbody>\n              {addVaccination && (\n                <tr className=\"addVaccinationForm\">\n                  <td>\n                    <input\n                      required\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      form=\"vaccinationForm\"\n                      value={visit.name ?? \"\"}\n                      onChange={(e) =>\n                        setVisit((visit) => ({\n                          ...visit,\n                          name: e.target.value,\n                        }))\n                      }\n                    />\n                  </td>\n                  <td>\n                    <input\n                      type=\"number\"\n                      placeholder=\"Batch no\"\n                      className=\"batch\"\n                      form=\"vaccinationForm\"\n                      value={visit.batchNumber ?? \"\"}\n                      onChange={(e) =>\n                        setVisit((visit) => ({\n                          ...visit,\n                          batchNumber: e.target.value,\n                        }))\n                      }\n                    />\n                  </td>\n                  <td>\n                    <input\n                      required\n                      placeholder=\"Date\"\n                      onFocus={onFocus}\n                      onBlur={onBlur}\n                      form=\"vaccinationForm\"\n                      value={visit.date ?? \"\"}\n                      onChange={(e) =>\n                        setVisit((visit) => ({\n                          ...visit,\n                          date: e.target.value,\n                        }))\n                      }\n                    />\n                  </td>\n                  <td>\n                    <input\n                      required\n                      placeholder=\"Next Visit\"\n                      onFocus={onFocus}\n                      onBlur={onBlur}\n                      form=\"vaccinationForm\"\n                      value={visit.dueDate ?? \"\"}\n                      min={visit.date ? getNextDay(visit.date) : \"\"}\n                      disabled={!visit.date}\n                      onChange={(e) =>\n                        setVisit((visit) => ({\n                          ...visit,\n                          dueDate: e.target.value,\n                        }))\n                      }\n                    />\n                  </td>\n                </tr>\n              )}\n              {loading ? (\n                <>\n                  <VaccinationTableSkeleton />\n                  <VaccinationTableSkeleton />\n                  <VaccinationTableSkeleton />\n                </>\n              ) : vaccinations?.length ? (\n                vaccinations.map((vaccination) => (\n                  <tr key={vaccination?._id}>\n                    <td>{vaccination?.name}</td>\n                    <td>\n                      {vaccination?.batchNumber\n                        ? vaccination?.batchNumber\n                        : \"-\"}\n                    </td>\n                    <td>{vaccination?.date.slice(0, 10)}</td>\n                    <td>{vaccination?.dueDate.slice(0, 10)}</td>\n                  </tr>\n                ))\n              ) : (\n                !addVaccination && (\n                  <tr>\n                    <td colSpan={4}>No vaccination records added </td>\n                  </tr>\n                )\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Vaccination;\n"],"names":["_ref","show","print","setPrint","userID","copyText","setCopyText","useState","domain","document","location","href","split","url","concat","_jsxs","className","children","_jsx","type","title","onClick","handleCopyLink","navigator","clipboard","writeText","setTimeout","MdContentCopy","target","rel","BsWhatsapp","async","card","querySelector","html2canvas","scale","then","canvas","data","toDataURL","doc","jsPDF","docWidth","internal","pageSize","getWidth","docHeight","getHeight","addImage","save","BsSave","Vaccination","_visit$name","_visit$batchNumber","_visit$date","_visit$dueDate","navigate","useNavigate","setShow","setUserID","petName","setPetName","breed","setBreed","weight","setWeight","allergies","setAllergies","conditions","setConditions","vetName","setVetName","vetNumber","setVetNumber","vetAddress","setVetAddress","vaccinations","setVaccinations","loading","setLoading","visit","setVisit","name","batchNumber","date","dueDate","inactive","setInactive","addVaccination","setAddVaccination","editbtn","setEditbtn","editIcon","setEditIcon","addEventListener","useEffect","handleContent","onFocus","e","currentTarget","onBlur","placeholder","response","getData","status","toast","error","foundUser","_id","BsShareFill","ShareVaccination","src","Logo","alt","id","preventDefault","toString","match","test","postData","success","AiOutlineEdit","AiOutlineSave","VaccinationCardSkeleton","_Fragment","disabled","value","onChange","maxLength","stopPropagation","form","AiOutlinePlus","onSubmit","Date","required","min","selectedDate","nextDay","setDate","getDate","toISOString","getNextDay","VaccinationTableSkeleton","length","map","vaccination","slice","colSpan"],"sourceRoot":""}